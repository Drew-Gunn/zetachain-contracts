/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Swap, SwapInterface } from "../../contracts/Swap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "systemContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CantBeIdenticalAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "CantBeZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughToPayGasFee",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongGasContract",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "origin",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        internalType: "struct zContext",
        name: "context",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onCrossChainCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "systemContract",
    outputs: [
      {
        internalType: "contract SystemContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001a3538038062001a3583398181016040528101906200003791906200008c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000111565b6000815190506200008681620000f7565b92915050565b600060208284031215620000a557620000a4620000f2565b5b6000620000b58482850162000075565b91505092915050565b6000620000cb82620000d2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200010281620000be565b81146200010e57600080fd5b50565b60805160601c6118eb6200014a60003960008181607701528181609b0152818161019f0152818161023d01526102db01526118eb6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063bb88b7691461003b578063de43156e14610059575b600080fd5b610043610075565b6040516100509190611358565b60405180910390f35b610073600480360381019061006e9190611008565b610099565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e90611373565b60405180910390fd5b6000606061479c8760400135141561017957610145848460006105d8565b9150610153848460146105d8565b604051602001610163919061125b565b6040516020818303038152906040529050610198565b600080858581019061018b9190610ef6565b9150915081935080925050505b60006103817f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663569541b96040518163ffffffff1660e01b815260040160206040518083038186803b15801561020357600080fd5b505afa158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610ec9565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d936a0126040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a157600080fd5b505afa1580156102b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d99190610ec9565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663842da36d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561033f57600080fd5b505afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190610ec9565b8a8a88600061064d565b90506000808473ffffffffffffffffffffffffffffffffffffffff1663d9eeebed6040518163ffffffff1660e01b8152600401604080518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610f52565b915091508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461046c576040517fcaaa35e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8281106104a5576040517fd0c279a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b386836040518363ffffffff1660e01b81526004016104e09291906112ff565b602060405180830381600087803b1580156104fa57600080fd5b505af115801561050e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105329190610fdb565b508473ffffffffffffffffffffffffffffffffffffffff1663c701262685838661055c9190611571565b6040518363ffffffff1660e01b8152600401610579929190611328565b602060405180830381600087803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190610fdb565b5050505050505050505050565b600080848484906014866105ec919061151b565b926105f9939291906114e0565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905060148101519150509392505050565b60008061065b888786610a00565b90506060811561075457600267ffffffffffffffff8111156106805761067f61173e565b5b6040519080825280602002602001820160405280156106ae5781602001602082028036833780820191505090505b50905086816000815181106106c6576106c561170f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084816001815181106107155761071461170f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061088e565b600367ffffffffffffffff81111561076f5761076e61173e565b5b60405190808252806020026020018201604052801561079d5781602001602082028036833780820191505090505b50905086816000815181106107b5576107b461170f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505089816001815181106108045761080361170f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084816002815181106108535761085261170f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8673ffffffffffffffffffffffffffffffffffffffff1663095ea7b389886040518363ffffffff1660e01b81526004016108c99291906112ff565b602060405180830381600087803b1580156108e357600080fd5b505af11580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190610fdb565b5060008873ffffffffffffffffffffffffffffffffffffffff166338ed17398887853060c861ffff164261094f919061151b565b6040518663ffffffff1660e01b815260040161096f959493929190611393565b600060405180830381600087803b15801561098957600080fd5b505af115801561099d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109c69190610f92565b905080600183516109d79190611571565b815181106109e8576109e761170f565b5b60200260200101519350505050979650505050505050565b600080610a0e858585610b3a565b905060008473ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610a4b91906112e4565b60206040518083038186803b158015610a6357600080fd5b505afa158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b91906110ac565b118015610b30575060008373ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610ade91906112e4565b60206040518083038186803b158015610af657600080fd5b505afa158015610b0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2e91906110ac565b115b9150509392505050565b6000806000610b498585610bac565b91509150858282604051602001610b61929190611276565b60405160208183030381529060405280519060200120604051602001610b889291906112a2565b6040516020818303038152906040528051906020012060001c925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c15576040517fcb1e7cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610610c4f578284610c52565b83835b8092508193505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cc1576040517f78b507da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9250929050565b6000610cdb610cd684611412565b6113ed565b90508083825260208201905082856020860282011115610cfe57610cfd611786565b5b60005b85811015610d2e5781610d148882610eb4565b845260208401935060208301925050600181019050610d01565b5050509392505050565b6000610d4b610d468461143e565b6113ed565b905082815260208101848484011115610d6757610d6661178b565b5b610d7284828561163f565b509392505050565b600081359050610d8981611859565b92915050565b600081519050610d9e81611859565b92915050565b600081359050610db381611870565b92915050565b600082601f830112610dce57610dcd611772565b5b8151610dde848260208601610cc8565b91505092915050565b600081519050610df681611887565b92915050565b60008083601f840112610e1257610e11611772565b5b8235905067ffffffffffffffff811115610e2f57610e2e61176d565b5b602083019150836001820283011115610e4b57610e4a611786565b5b9250929050565b600082601f830112610e6757610e66611772565b5b8135610e77848260208601610d38565b91505092915050565b600060608284031215610e9657610e95611777565b5b81905092915050565b600081359050610eae8161189e565b92915050565b600081519050610ec38161189e565b92915050565b600060208284031215610edf57610ede611795565b5b6000610eed84828501610d8f565b91505092915050565b60008060408385031215610f0d57610f0c611795565b5b6000610f1b85828601610da4565b925050602083013567ffffffffffffffff811115610f3c57610f3b611790565b5b610f4885828601610e52565b9150509250929050565b60008060408385031215610f6957610f68611795565b5b6000610f7785828601610d8f565b9250506020610f8885828601610eb4565b9150509250929050565b600060208284031215610fa857610fa7611795565b5b600082015167ffffffffffffffff811115610fc657610fc5611790565b5b610fd284828501610db9565b91505092915050565b600060208284031215610ff157610ff0611795565b5b6000610fff84828501610de7565b91505092915050565b60008060008060006080868803121561102457611023611795565b5b600086013567ffffffffffffffff81111561104257611041611790565b5b61104e88828901610e80565b955050602061105f88828901610d7a565b945050604061107088828901610e9f565b935050606086013567ffffffffffffffff81111561109157611090611790565b5b61109d88828901610dfc565b92509250509295509295909350565b6000602082840312156110c2576110c1611795565b5b60006110d084828501610eb4565b91505092915050565b60006110e583836110f1565b60208301905092915050565b6110fa816115a5565b82525050565b611109816115a5565b82525050565b61112061111b826115a5565b6116b2565b82525050565b60006111318261147f565b61113b81856114a2565b93506111468361146f565b8060005b8381101561117757815161115e88826110d9565b975061116983611495565b92505060018101905061114a565b5085935050505092915050565b611195611190826115d5565b6116c4565b82525050565b60006111a68261148a565b6111b081856114b3565b93506111c081856020860161164e565b6111c98161179a565b840191505092915050565b6111dd81611609565b82525050565b60006111f0602b836114c4565b91506111fb826117b8565b604082019050919050565b60006112136020836114d5565b915061121e82611807565b602082019050919050565b60006112366001836114d5565b915061124182611830565b600182019050919050565b611255816115ff565b82525050565b6000611267828461110f565b60148201915081905092915050565b6000611282828561110f565b601482019150611292828461110f565b6014820191508190509392505050565b60006112ad82611229565b91506112b9828561110f565b6014820191506112c98284611184565b6020820191506112d882611206565b91508190509392505050565b60006020820190506112f96000830184611100565b92915050565b60006040820190506113146000830185611100565b611321602083018461124c565b9392505050565b60006040820190508181036000830152611342818561119b565b9050611351602083018461124c565b9392505050565b600060208201905061136d60008301846111d4565b92915050565b6000602082019050818103600083015261138c816111e3565b9050919050565b600060a0820190506113a8600083018861124c565b6113b5602083018761124c565b81810360408301526113c78186611126565b90506113d66060830185611100565b6113e3608083018461124c565b9695505050505050565b60006113f7611408565b90506114038282611681565b919050565b6000604051905090565b600067ffffffffffffffff82111561142d5761142c61173e565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156114595761145861173e565b5b6114628261179a565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600080858511156114f4576114f3611781565b5b838611156115055761150461177c565b5b6001850283019150848603905094509492505050565b6000611526826115ff565b9150611531836115ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611566576115656116e0565b5b828201905092915050565b600061157c826115ff565b9150611587836115ff565b92508282101561159a576115996116e0565b5b828203905092915050565b60006115b0826115df565b9050919050565b60006115c2826115df565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116148261161b565b9050919050565b60006116268261162d565b9050919050565b6000611638826115df565b9050919050565b82818337600083830152505050565b60005b8381101561166c578082015181840152602081019050611651565b8381111561167b576000848401525b50505050565b61168a8261179a565b810181811067ffffffffffffffff821117156116a9576116a861173e565b5b80604052505050565b60006116bd826116ce565b9050919050565b6000819050919050565b60006116d9826117ab565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f4f6e6c792073797374656d20636f6e74726163742063616e2063616c6c20746860008201527f69732066756e6374696f6e000000000000000000000000000000000000000000602082015250565b7f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f600082015250565b7fff00000000000000000000000000000000000000000000000000000000000000600082015250565b611862816115a5565b811461186d57600080fd5b50565b611879816115b7565b811461188457600080fd5b50565b611890816115c9565b811461189b57600080fd5b50565b6118a7816115ff565b81146118b257600080fd5b5056fea2646970667358221220a506666e43bb760d5a7b225a32e348fd1f8c20af3b65c355827fe9aae17335bd64736f6c63430008070033";

type SwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Swap__factory extends ContractFactory {
  constructor(...args: SwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    systemContractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Swap> {
    return super.deploy(
      systemContractAddress,
      overrides || {}
    ) as Promise<Swap>;
  }
  override getDeployTransaction(
    systemContractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(systemContractAddress, overrides || {});
  }
  override attach(address: string): Swap {
    return super.attach(address) as Swap;
  }
  override connect(signer: Signer): Swap__factory {
    return super.connect(signer) as Swap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapInterface {
    return new utils.Interface(_abi) as SwapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Swap {
    return new Contract(address, _abi, signerOrProvider) as Swap;
  }
}
